?head
HLH_2014 <- read.csv("~/Documents/Research/HLH/HLH_2014.csv")
View(HLH_2014)
data <- HLH_2014
summary(data)
head(data)
names(data)
str(data)
?remove
rm(data, data$V)
rm(data, data$X)
rm(data$X)
sum(data$genspec == "Chr_vera")
sum(data$Species == "verater")
sum(data$Species == "albisella")
sum(data$Species == "strigosus")
# Chromis verater
sum(data$Species == "verater")
# Dascyllus albisella
sum(data$Species == "albisella")
# Cteochaetus strigosus
sum(data$Species == "strigosus")
0.1483290603)
z <- c(0.1877347353,1.2084575275,1.2726501496,2.925112083,0.4956906243,0.8387740027,2.8540138068,2.077495786,0.2847642211,2.138510664,1.4582936957,1.3260138712,0.8082055807,2.5018308775,1.2358220092,0.6051679228,1.0961090092,0.427337049,1.6306002372,0.8469103169,1.7390149002,2.8261587043,1.0724365631,2.6567678568,0.9900700241,2.9846083432,1.7889787845,1.3724586524,1.14682562,2.0859452132,1.6241549098,1.3938722112,1.7422236524,2.3188522039,2.1743190181,0.9567843634,2.108162532,2.6375116223,1.3456992212,2.6388078354,1.9671744831,2.334307136,0.1978864418,0.3550643045,0.4200543212,1.8202279209,0.6874998048,1.7109850904,2.7196940309,0.0451181254,2.6446404999,1.8064917151,2.7975010785,2.270497247,0.667237161,0.4818316609,2.7903990104,2.1086007847,0.9531849992,0.6300649929,1.1502916796,1.6827285522,0.3794630342,1.7132543285,1.8562681644,1.0103399891,0.5755751938,3.7264848426,2.2731542265,1.373661422,3.3198286204,2.1632839475,1.5581624262,0.5572886355,1.2967881628,1.5930228999,0.6051318399,0.6132933415,1.2635259538,0.9196337638,1.5419044013,0.0213343812,0.9667831038,1.6450664267,3.2529168702,0.3083725996,0.4669962769,0.2464809126,0.4824312788,2.5133331953,1.9531216266,0.02135895,0.7765319636,0.55150019,1.7866505168,1.1233929377,2.5234986953,2.0318647589,0.2001876988,0.1483290603)
z <- c(0.1877347353,45)
? signif()
signif(6.6666666)
(pop_size_10d<-500*exp(-.05*10))
animal <- rep(c('phyto', 'zoo', 'fish'), times = 4)
animal
# a. years<-rep(c("2000", "2001", "2002"), each=12)
(years<-rep(c("2000", "2001", "2002"), each=12))
month.name
months<-rep(month.name, times=4)
months
months<-rep(month.name, times=3)
months
sum(years)
count(year)
count(yearss)
count(years)
length(years)
length(months)
(pop_size_10d<-500*exp((-.05)*10))
k.p<-0.7 # grazing half-saturation constant
i.max<-1.5 # maximum specific grazing rate (day^-1)
p<-0.8 # phytoplankton density (0.8 mmol Nm^-3)
k.p<-0.7 # grazing half-saturation constant (mmol Nm^-3)
i.max<-1.5 # maximum specific grazing rate (day^-1)
# a.
p<-0.8 # phytoplankton density (0.8 mmol Nm^-3)
ingestion_rate<-(((p^2)/((k.p^2)+(p^2)))*i.max)
(ingestion_rate<-(((p^2)/((k.p^2)+(p^2)))*i.max))
(signif(ingestion_rate, 3))
k.p.red<-k.p/2
k.p.red<-k.p/2 # reduce k.p by 50%
ingestion_rate_red<-(((p^2)/((k.p.red^2)+(p^2)))*i.max) # calculate new ingestion rate
(signif(ingestion_rate_red, 3)) # 0.85  (rounded to three significant digits)
(years<-rep(c("2000", "2001", "2002"), each=12)) # run this
(months<-rep(month.name, times=3)) # run this
months
length(months)
length(years)
k.p<-0.7 # grazing half-saturation constant (mmol Nm^-3)
i.max<-1.5 # maximum specific grazing rate (day^-1)
# a. Determine ingestion rate given known phytoplankton density:
p<-0.8 # phytoplankton density (0.8 mmol Nm^-3)
ingestion_rate<-(((p^2)/((k.p^2)+(p^2)))*i.max) # calculate ingestion rate
(signif(ingestion_rate, 3)) # 0.85  (rounded to three significant digits)
# b. See how the rate changes when grazing half-saturation constant is changed:
k.p.red<-k.p/2 # reduce k.p by 50%
ingestion_rate_red<-(((p^2)/((k.p.red^2)+(p^2)))*i.max) # calculate new ingestion rate
(signif(ingestion_rate_red, 3)) # 1.26  (rounded to three significant digits)
k.p.red
vector.1<-c(3,6,9,12,15,50,50,50,50,50,50,50,20,30,40)
vector.2<-sqrt(vector.1)*2
vector.2<-(sqrt(vector.1))*2
toAdd<-sample(1:1000)
vector.3<-vector.1+toAdd
toAdd<-c(sample(1:1000))
vector.3<-vector.1+toAdd
length(vector.1)
toAdd<-c(sample(1:1000, 1))
vector.3<-vector.1+toAdd
vector.3
vector.1<-c(seq(3,15,3)) + c(rep(50,7)) + c(seq(20,40,10)))
vector.1<-(c(seq(3,15,3)) + c(rep(50,7)) + c(seq(20,40,10)))
vector.1<-(c(seq(3,15,3)) + c(rep(50,7)) + c(seq(20,40,10))
vector.1<-(c(seq(3,15,3)) + c(rep(50,7)) + c(seq(20,40,10)))
vector.1<-(c(seq(3,15,3)) + c(rep(50,7)) + c(seq(20,40,10)))
vector.1<-c(seq(3,15,3) + rep(50,7) + seq(20,40,10))
?rep
vector.1<-(c(seq(3,15,3))) + (c(rep(50,7))) + (c(seq(20,40,10)))
vector.1<-c(seq(3,15,3)) + c(rep(50, times=7)) + c(seq(20,40,10))
vector.1<-seq(3,15,3)) + rep(50, times=7) + seq(20,40,10)
vector.1<-seq(3,15,3) + rep(50, times=7) + seq(20,40,10)
vector.1<- c(seq(3,15,3) + rep(50, times=7) + seq(20,40,10))
vector.1<- c(seq(3,15,3),rep(50, times=7),seq(20,40,10))
vector.1
vector.3<-vector.1+c(sample(1:1000, 1))
vector.3
toAdd<-c(sample(1:1000, 15))
vector.3<-vector.1+toAdd
vector.3<-vector.1 + c(sample(1:1000, 1))
vector.3
toAdd
toAdd
set.seed(10)
toAdd<-c(sample(1:1000, 15))
toAdd
set.seed(10)
toAdd<-c(sample(1:1000, 15))
toAdd
Seasons<-c(4,1,1,2,3,3,3)
class(Seasons)
as.factor(Seasons)
class(Seasons)
Seasons<-as.factor(Seasons)
class(Seasons)
levels(Seasons)
new.level<-paste(c('Spring', 'Summer', 'Fall', 'Winter'), 2000, sep='')
new.level
levels(Seasons)<-new.levels
levels(Seasons)<-new.level
Seasons
Seasons<-c(4,1,1,2,3,3,3)
class(Seasons)
Seasons<-as.factor(Seasons)
levels(Seasons)<-paste(c('Spring', 'Summer', 'Fall', 'Winter'), 2000, sep='')
Seasons
Seasons<-as.factor(Seasons)
class(Seasons)
Seasons<-c(4,1,1,2,3,3,3)
Seasons<-as.factor(Seasons)
levels(Seasons)<-paste(c('Spring', 'Summer', 'Fall', 'Winter'), 2000, sep='')
vector<-seq(0,2,0.2)
vector
vector<-vector[-3]
vector
vector<-seq(0,2,0.2)
vector.a<-vector[-3]
vector.b<-subset(vector, vector >= 0.4 & vector <=1)
vector.b
vector<-ifelse(test=vector<1, yes=5)
vector<-vector[vector(<1)]<-5
vector<-vector(<1)<-5
which(vector<1)<-5
which(vector<1)
vector[which(vector<1)]<-5
vector
mean(vector)
Vec1<-c(54,67,89,90,34,12,22)
Vec2<-c(45,40,54,89,90,99)
Vec1
Vec2
Vec3<-intersect(Vec1, Vec2)
Vec3
Length<-c(40,60,80,100,120,140,160,180,300,770,800,350,230,110,200)
Weight<-(0.1)*((Length)^3))
Weight<-(0.1)*((Length)^3)
Weight
Length<-Length/10 # convert from mm to cm
Length
Weight<-(0.1)*((Length)^3) # calculates weight for each individual fish
Weight
signif(Weight,1)
round(Weight)
ObsWeight<-c(1,5,4,8,19,27,40,55,261,4563,5118,430,123,9,80)
ObsWeight
mean(ObsWeight)
PredWeight<-(0.1)*((Length)^3) # calculates weight for each individual fish
round(PredWeight) # rounds Weight to nearest g
mean(ObsWeight)
mean(PredWeight)
round(PredWeight) # rounds Weight to nearest g
mean(PredWeight)
mean(ObsWeight)
Length<-c(40,60,80,100,120,140,160,180,300,770,800,350,230,110,200) # (mm)
# a. create new vector (PredWeight) of individual fish weights predicted from Length using given formula
Length<-Length/10 # convert from mm to cm
PredWeight<-(0.1)*((Length)^3) # calculates weight for each individual fish
round(PredWeight) # rounds Weight to nearest g
# b. create given vector: ObsWeight
ObsWeight<-c(1,5,4,8,19,27,40,55,261,4563,5118,430,123,9,80)
mean(ObsWeight)
mean(PredWeight)
mean(ObsWeight)
mean(PredWeight)
PredWeight
PredWeight<-round(PredWeight) # rounds Weight to nearest g
mean(PredWeight)
mean(ObsWeight)
Length<-c(40,60,80,100,120,140,160,180,300,770,800,350,230,110,200) # (mm)
Length<-Length/10 # convert from mm to cm
Length
PredWeight<-(0.1)*((Length)^3) # calculates weight for each individual fish
PredWeight<-round(PredWeight) # rounds Weight to nearest g
PredWeight
PredWeight<-(0.01)*((Length)^3) # calculates weight for each individual fish
PredWeight<-round(PredWeight) # rounds Weight to nearest g
PredWeight
ObsWeight<-c(1,5,4,8,19,27,40,55,261,4563,5118,430,123,9,80)
mean(ObsWeight)
mean(PredWeight)
o.weight.mean<-mean(ObsWeight)
p.weight.mean<-mean(PredWeight)
abs(-3)
abs(o.weight.mean-p.weight.mean)
Maturity<-factor(Length)
Maturity<-factor(ifelse(test=Length<=15, yes="Juvenile", no='Adult'))
Maturity
qplot(New.RData$Temp.C, geom="histogram", xlab="Temperature (C)")
citation(ggplot2)
library(ggplot2)
citation(ggplot2)
v
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df <- tibble(
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
library(dolyr)
library(dplyr)
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
o
df <- tibble(group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6)
updateR
updateR()
?updateR
?updater
updatr
updater
install.packages(updater)
install.packages("updater")
# load packages
library(ggplot2) # for visualizations
library(ggeffects) # for partial effects
library(MuMIn) # for r2 test
library(lme4) # to run glmer() - model
install.packages("lme4")
library(lme4) # to run glmer() - model
library(lme4) # to run glmer() - model
?emmeans()
cite
?cite()
?cite
cite
?cite
citation()
lme4()
cite(lme4)
citation("lme4")
# INITIALIZATION ----------------------------------------------------------
## load required packages
library(plyr)
library(dplyr)
# summarize E/K cover per survey type/method per survey date per reef
temp <- raw %>% group_by(Reef,Method,Habitat,time.ind) %>% summarise('kapp'=mean(kapp,na.rm=T))
temp$dum <- 1
temp <- as.data.frame(temp)
temp$Reef <- as.factor(temp$Reef)
# GENERAL TREND OF DECLINE ------------------------------------------------------------------------------
detach(package:plyr)
library(dplyr)
# summarize E/K cover per survey type/method per survey date per reef
temp <- raw %>% group_by(Reef,Method,Habitat,time.ind) %>% summarise('kapp'=mean(kapp,na.rm=T))
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year,
#date = raw$SurveyDate,
Reef = raw$Reef, Habitat = raw$Habitat, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
# long to wide for habitat and method
reshape(surveys, idvar = "Habitat", timevar = "year", direction = "wide")
surveys
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year,
#date = raw$SurveyDate,
Reef = raw$Reef, Habitat = raw$Habitat, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year,
#date = raw$SurveyDate,
Reef = raw$Reef, Habitat = raw$Habitat, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
head(raw)
head(raw)
# LOAD DATA & MANIPULATE -------------------------------------------------
raw <- read.csv("all_kbay_combined.csv") # load entire dataset - transect/benthic survey lvl
setwd("~/Documents/GitHub/kbay_invasivealgae") # change to your wd
# LOAD DATA & MANIPULATE -------------------------------------------------
raw <- read.csv("all_kbay_combined.csv") # load entire dataset - transect/benthic survey lvl
raw$SurveyDate <- as.Date(raw$SurveyDate_benthic)
raw$X <- NULL
fishcombo_all <- read.csv("fishcombo_all.csv") # slight different fish data:
# drop reefs with very low invasive algae cover
raw <- raw[which(raw$Reef %!in% c(12, 17, 22)),]
fishcombo_all <- fishcombo_all[which(fishcombo_all$Reef %!in% c(12, 17, 22)),]
# make a index for time
temp <- NA
'%!in%' <- function(x,y)!('%in%'(x,y)) # the opposite of %in%
setwd("~/Documents/GitHub/kbay_invasivealgae") # change to your wd
# LOAD DATA & MANIPULATE -------------------------------------------------
raw <- read.csv("all_kbay_combined.csv") # load entire dataset - transect/benthic survey lvl
raw$SurveyDate <- as.Date(raw$SurveyDate_benthic)
raw$X <- NULL
fishcombo_all <- read.csv("fishcombo_all.csv") # slight different fish data:
# drop reefs with very low invasive algae cover
raw <- raw[which(raw$Reef %!in% c(12, 17, 22)),]
fishcombo_all <- fishcombo_all[which(fishcombo_all$Reef %!in% c(12, 17, 22)),]
# make a index for time
temp <- NA
for(i in 0:(length(unique(raw$Year))-1)){
t <- rep(2011+i,12) # create 12 reps of each year
temp <- c(temp,t)
}
temp <- temp[2:length(temp)] # remove the initial NA value
fulltime <- data.frame(Month=rep(NA,length(temp)),Year=rep(NA,length(temp))) # create a placeholder df with month and year columns
fulltime$Year <- temp # fill in reps of year into this column
fulltime$Month <- rep(seq(1:12),length(unique(raw$Year))) # add in months (1-12) for each year
min(raw$SurveyDate)
fulltime <- fulltime[11:nrow(fulltime),] # remove months prior to 11/2011 from data frame (no surveys were done)
fulltime$time.ind <- seq(1:nrow(fulltime)) # add index for each month/year timepoint
raw <- left_join(raw,fulltime,by=c("Month","Year")) # add index to raw data
raw$dum <- 1 # dummy var
timego <- fulltime
timego$mo_yr <- paste('1/',timego$Month,'/',timego$Year,sep="")
timego$mo_yr <- as.Date(timego$mo_yr,'%d/%m/%Y')
raw$Month <- as.numeric(raw$Month)
raw$Year <- as.numeric(raw$Year)
temp <- ddply(raw[which(raw$Method == "photoquad"),], .(Reef,Month,Year,Method), 'nrow')
library(dplyr)
# what dates were reefs surveyed? just some nice code to make a table don't always need to run
raw$Month <- as.numeric(raw$Month)
raw$Year <- as.numeric(raw$Year)
temp <- ddply(raw[which(raw$Method == "photoquad"),], .(Reef,Month,Year,Method), 'nrow')
library(plyr)
install.packages("plyr")
library(plyr)
install.packages("plyr")
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year,
#date = raw$SurveyDate,
Reef = raw$Reef, Habitat = raw$Habitat, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
# long to wide for habitat and method
reshape(surveys, idvar = "Habitat", timevar = "year", direction = "wide")
surveys
head(raw)
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year, month = raw$Month,
#date = raw$SurveyDate,
Reef = raw$Reef, Habitat = raw$Habitat, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
surveys
View(surveys)
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year, month = raw$Month,
#date = raw$SurveyDate,
Reef = raw$Reef, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
surveys
## Figure S1: Survey Effort Per Reef ####
surveys <- aggregate(list(n = raw$Transect), by = list(year = raw$Year, month = raw$Month,
date = raw$SurveyDate,
Reef = raw$Reef, Method = raw$Method), #Treatment = raw$Treatment
function(x) length(unique(x)))
surveys
# INITIALIZATION ----------------------------------------------------------
## load required packages
library(plyr)
library(dplyr)
library(reshape2)
library(knitr)
library(kableExtra)
library(dplyr)
library(mgcv)
library(plotrix)
library(vegan)
library(tidyr)
library(ggplot2)
library(scales)
'%!in%' <- function(x,y)!('%in%'(x,y)) # the opposite of %in%
std <- function(x){(x-min(x))/(max(x)-min(x))}
setwd("~/Documents/GitHub/kbay_invasivealgae") # change to your wd
# LOAD DATA & MANIPULATE -------------------------------------------------
raw <- read.csv("all_kbay_combined.csv") # load entire dataset - transect/benthic survey lvl
raw$SurveyDate <- as.Date(raw$SurveyDate_benthic)
raw$X <- NULL
fishcombo_all <- read.csv("fishcombo_all.csv") # slight different fish data:
# drop reefs with very low invasive algae cover
raw <- raw[which(raw$Reef %!in% c(12, 17, 22)),]
fishcombo_all <- fishcombo_all[which(fishcombo_all$Reef %!in% c(12, 17, 22)),]
# make a index for time
temp <- NA
for(i in 0:(length(unique(raw$Year))-1)){
t <- rep(2011+i,12) # create 12 reps of each year
temp <- c(temp,t)
}
temp <- temp[2:length(temp)] # remove the initial NA value
fulltime <- data.frame(Month=rep(NA,length(temp)),Year=rep(NA,length(temp))) # create a placeholder df with month and year columns
fulltime$Year <- temp # fill in reps of year into this column
fulltime$Month <- rep(seq(1:12),length(unique(raw$Year))) # add in months (1-12) for each year
min(raw$SurveyDate)
fulltime <- fulltime[11:nrow(fulltime),] # remove months prior to 11/2011 from data frame (no surveys were done)
fulltime$time.ind <- seq(1:nrow(fulltime)) # add index for each month/year timepoint
raw <- left_join(raw,fulltime,by=c("Month","Year")) # add index to raw data
raw$dum <- 1 # dummy var
timego <- fulltime
timego$mo_yr <- paste('1/',timego$Month,'/',timego$Year,sep="")
timego$mo_yr <- as.Date(timego$mo_yr,'%d/%m/%Y')
# GENERAL TREND OF DECLINE ------------------------------------------------------------------------------
# summarize E/K cover per survey type/method per survey date per reef
temp <- raw %>% group_by(Reef,Method,Habitat,time.ind) %>% summarise('kapp'=mean(kapp,na.rm=T))
### Figure 5. Herbivore Biomass ####
# herbivore biomass through time --> uses fishcombo data
head(fishcombo_all)
fishcombo_all$SurveyDate <- as.Date(fishcombo_all$SurveyDate)
fishcombo_all$Month <- as.integer(format(fishcombo_all$SurveyDate, "%m"))
fishcombo_all$Year <- as.numeric(format(fishcombo_all$SurveyDate, "%Y"))
# summarize hbio yearly
fishcombo_all %>% group_by(Year) %>% summarise('H_bio'=mean(H_bio,na.rm=T))
temp <- left_join(fishcombo_all, fulltime, by=c('Month','Year'))
temp <- temp[!is.na(temp$time.ind),]
str(temp)
temp <- temp[which(temp$Reef %!in% c(12, 17, 22)),]
summary(temp)
temp$Reef <- as.factor(temp$Reef)
head(temp)
setwd("C:/Users/Morgan.Winston/Documents/GitHub/kaneohe-bay-algae-decline/outputs")
# herbivore community composition
herbs <- raw %>% dplyr::group_by(Month,Year,Reef) %>% summarise(Hgd=mean(Hgd,na.rm=T),Hbrow=mean(Hbrow,na.rm=T),Hscex=mean(Hscex,na.rm=T),
kapp=mean(kapp,na.rm=T)) %>% ungroup()
herbs <- herbs[!is.na(herbs$Hgd),]
herbs$sum <- rowSums(herbs[4:6])
herbs <- herbs[!herbs$sum==0,]
herbs.f <- log(herbs[4:6]+1)
herbs.mds <- suppressMessages(metaMDS(herbs.f,trace=0))
## significance testing using RDA
spp.mat <- herbs[c('Hgd','Hbrow','Hscex')]
head(spp.mat)
spp.mat$Hgd <- log(spp.mat$Hgd+1)
spp.mat$Hbrow <- log(spp.mat$Hbrow+1)
spp.mat$Hscex <- log(spp.mat$Hscex+1)
for(i in 1:3) spp.mat[i] <- std(spp.mat[i])
summary(spp.mat)
ben.mat <- std(herbs$kapp)
rda.f <- rda(ben.mat~.,data=spp.mat)
anova(rda.f)
permutest(rda.f, permutations = 1000)
RsquareAdj(rda.f)
plot(rda.f,scaling=3)
summary(rda.f)
anova(rda.f,by="terms")››
anova(rda.f,by="terms")
anova.cca(rda.f,by="terms")
head(ben.mat)
range(ben.mat)
head(raw$kapp)
# herbivore community composition
herbs <- raw %>% dplyr::group_by(Month,Year,Reef) %>% summarise(Hgd=mean(Hgd,na.rm=T),Hbrow=mean(Hbrow,na.rm=T),Hscex=mean(Hscex,na.rm=T),
kapp=mean(kapp,na.rm=T)) %>% ungroup()
herbs <- herbs[!is.na(herbs$Hgd),]
herbs$sum <- rowSums(herbs[4:6])
herbs <- herbs[!herbs$sum==0,]
herbs.f <- log(herbs[4:6]+1)
herbs.mds <- suppressMessages(metaMDS(herbs.f,trace=0))
## significance testing using RDA
spp.mat <- herbs[c('Hgd','Hbrow','Hscex')]
head(spp.mat)
spp.mat$Hgd <- log(spp.mat$Hgd+1) #log + 1 transform
spp.mat$Hbrow <- log(spp.mat$Hbrow+1)
spp.mat$Hscex <- log(spp.mat$Hscex+1)
for(i in 1:3) spp.mat[i] <- std(spp.mat[i])
summary(spp.mat)
ben.mat <- std(herbs$kapp_sq)
herbs$kapp_sq <- sqrt(herbs$kapp) # square root transform
ben.mat <- std(herbs$kapp_sq)
rda.f <- rda(ben.mat~.,data=spp.mat)
anova(rda.f)
permutest(rda.f, permutations = 1000)
RsquareAdj(rda.f)
plot(rda.f,scaling=3)
summary(rda.f)
anova.cca(rda.f,by="terms")
RsquareAdj(rda.f)
